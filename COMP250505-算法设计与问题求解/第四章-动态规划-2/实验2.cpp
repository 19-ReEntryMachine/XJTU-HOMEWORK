#include<stdio.h>
#include<string.h>
int str[200][200];                                   //声明数组，用于储存最长公共子序列的全部计算结果
char reg[200];                                       //声明数组，用于储存最长公共子序列，别问我为什么把它放这，问就是扔里面有警告 
char* DynamicProg(char *s1,char *s2,int l1,int l2)   //声明函数，动态规划法计算最长公共子序列 
{
	int i,j,n=0;                                     //声明变量，控制循环或者计算最长公共子序列长度 
	//printf("1");
	for(i=0;i<=l1;i++)                               //初始化运算初值：在不引入第二个序列之时，最长公共子序列必然是0 
	{
		str[i][0]=0;
	}
	//printf("1");
	for(j=0;j<=l2;j++)
	{
		str[0][j]=0;
	}
	//printf("1");
	for(i=1;i<=l1;i++)                               //计算引入第一个序列前i个字母、第二个序列前j个字母时可以获得的最长序列 
	{
		for(j=1;j<=l2;j++)
		{
			if(s1[i-1]==s2[j-1])                     //若对应序列末尾的字母恰好相同，此时的最长序列长度比两个序列各短1个字母时的最长序列长度大1 
			{
				str[i][j]=str[i-1][j-1]+1;
				//printf("1");
			}
			else                                     //若序列末尾字母不同，则最长公共子序列的长度则是“第一个序列删掉尾字母”和“第二个序列删掉尾字母”两种情形下的最长序列中的最大序列 
			{
				if(str[i-1][j]>=str[i][j-1])
				{
					str[i][j]=str[i-1][j];
				}
				else str[i][j]=str[i][j-1];
			}
		}
	}
	i=l1,j=l2;                                       //倒推最长公共子序列本身，设定倒推起点和字符串终止符
	n=str[i][j]; 
	reg[n]='\0',n--;
	while(str[i][j]>0)                               //在涉及的最长公共子序列长度已经等于0时，子序列的查找已经完成，终止查找 
	{
		while(str[i][j]==str[i-1][j])                //向上寻找最长序列长度相等的情形，并在涉及的长度最小的符合条件的序列位置终止 
		{
			i--;
		}
		while(str[i][j]==str[i][j-1])                //向左寻找最长序列长度相等的情形，并在涉及的长度最小的符合条件的序列位置终止 
		{
			j--;
		}
		reg[n]=s1[i-1];                              //该位置对应的字符为最长公共子序列中的元素，将其存入字符串数组中，从左上方元素继续进行搜索进程 
		i--,j--,n--;
	}
	return reg;
}

int main()                                           //主函数开始 
{
	char str1[200],str2[200],*str;                   //声明字符串变量，前两个用于储存输入的字符串，后一个用于存放运算结果 
	int ls1,ls2;                                     //声明整型变量，用于存储字符串长度 
	printf("请输入两个字符串：\n");                  //输出提示，按照提示输入两个字符串序列，存入内存中 
	scanf("%s",str1);
	scanf("%s",str2);
	ls1=strlen(str1);                                //计算两个序列的长度 
	ls2=strlen(str2);
	//printf("1");
	str=DynamicProg(str1,str2,ls1,ls2);              //调用动态规划函数计算最长公共子序列，返回序列，按照题设输出序列及其长度，主函数结束 
	printf("最长子序列为%s,其长度为%d",str,strlen(str));
	return 0; 
}
