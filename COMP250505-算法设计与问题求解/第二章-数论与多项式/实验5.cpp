#include<stdio.h> 

int main()                                           //主函数开始 
{
	int n;                                           //声明变量：待求尾部0数的阶乘数 
	printf("Please input the factorial number:");    //给出提示，输入待求0数的阶乘数 
	scanf("%d",&n);
	int zn=0,aux=1;                                  //声明变量：尾部0数，辅助变量 
	for(int i=1;;i++)                                //由一次开始，逐次计算5的各次幂在阶乘表达式中出现的次数，不设特定上限 
	{
		aux=aux*5;                                   //在每次循环开始之处，利用辅助变量构造5的乘幂 
		zn=zn+n/aux;                                 //阶乘数与对应乘幂相除所得的整数（不计余数），则是具有这一乘幂因子的数在阶乘表达式中出现的次数，我们将这个次数计入到尾部0数中 
		if(aux>zn)                                   //如果计算出的5的乘幂大于阶乘数，则这一乘幂的最小倍数不会出现在阶乘表达式中，接下来的判定则无意义，循环终止 
		{
			break;
		}
	}
	printf("There are %d zeroes at the tail.",zn);   //输出尾部0的总数，主程序结束 
	return 0;
}                                                    //本题的核心在于寻找阶乘结果中10因子的数目，而10又可以拆成5和2两个因子，其中2因子出现的比5因子频繁得多，因此可以认为5因子决定了阶乘结果中的10因子数目；具有5因子的数是5及5乘幂的倍数，且5的n次幂具有n个5因子；这一算法是基于这一原理设计的
                                                     //由于5的高次乘幂在之前计算5和5的低次乘幂的倍数数量的时候已经被重复计算，因此在计算高次乘幂对应的尾部0数增量时，并没有乘以n，而是直接相加 
